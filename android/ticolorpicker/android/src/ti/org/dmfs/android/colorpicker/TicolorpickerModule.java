/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.org.dmfs.android.colorpicker;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.util.TiActivityResultHandler;
import org.appcelerator.titanium.util.TiActivitySupport;
import org.appcelerator.titanium.util.TiConvert;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;

@Kroll.module(name = "Ticolorpicker", id = "ti.org.dmfs.android.colorpicker")
public class TicolorpickerModule extends KrollModule implements
		TiActivityResultHandler {

	// Standard Debugging variables
	private static final String LCAT = "TicolorpickerModule";
	private static final boolean DBG = TiConfig.LOGD;
	private final int COLOR_PICKER_REQUEST = 99;

	@Kroll.constant
	public static final String SUCESS_COLOR_PICKER = "successcolorpicker";

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public TicolorpickerModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is
		// created
	}

	@Kroll.method
	public void pickerColor() {
		Activity activity = TiApplication.getAppCurrentActivity();
		ColorPickerActivity.start(activity, COLOR_PICKER_REQUEST, this);
	}

	@Override
	public void onError(Activity arg0, int arg1, Exception arg2) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onResult(Activity activity, int requestCode, int resultCode,
			Intent data) {
		if (requestCode == COLOR_PICKER_REQUEST
				&& resultCode == Activity.RESULT_OK) {
			// get values
			Bundle extras = data.getExtras();
			int color = extras.getInt(ColorPickerActivity.EXTRA_COLOR);
			String colorName = extras
					.getString(ColorPickerActivity.EXTRA_COLOR_NAME);
			// generate response
			KrollDict response = new KrollDict();
			String hex = String.format("#%06X", (0xFFFFFF & color));
			response.put("color", hex);
			response.put("colorName", colorName);
			// fire success event
			fireEvent(SUCESS_COLOR_PICKER, response);
		}
	}

}
